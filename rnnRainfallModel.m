function [y1,af1] = rnnRainfallModel(x1,ai1)
%RNNRAINFALLMODEL neural network simulation function.
%
% Auto-generated by MATLAB, 13-Feb-2022 04:51:16.
% 
% [y1,af1] = rnnRainfallModel(x1,ai1) takes these arguments:
%   x1 = 5xTS matrix, input #1
%   ai1 = 10x2 matrix, initial 2 delay states for layer #1.
%   ai2 = 1x2 matrix, initial 2 delay states for layer #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   af1 = 10x2 matrix, final 2 delay states for layer #1.
%   af2 = 1x2 matrix, final 2 delay states for layer #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;0;0];
x1_step1.gain = [0.0208333333333333;0.0202020202020202;0.00193423597678917;0.00192529842125529;0.0350877192982456];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.3611970932284314095;0.83970550334018989602;0.029379816987124995897;0.14418772121251191565;-0.50625582299832627697;-0.17435229419164360865;-0.92597818152537092473;1.7292583067376334771;-1.3267058204108213015;1.5956887778281572121];
IW1_1 = [0.58891668315112510879 -0.37865192838637701245 -1.6047115919049861343 -0.70767118131070883003 -0.70388439266893243484;-0.14639315538506350589 0.3521402726855476506 -0.33408125099733093633 -0.40006969739424425025 1.266168850583378358;-1.3620769010653159814 0.27717539801996587956 0.78056377189073478107 0.4895080614285987064 0.075697761299126198331;-0.78494171787247102312 0.593976676831670658 1.9600319429502608415 0.32366572368300133844 -0.32282261990759841819;-0.72867397195158700729 0.12702408369749071393 0.33741289506356081374 -0.12413842886959942924 0.49176436380143401239;0.2840742887334253286 -0.26390254870202761728 2.2326149573563509598 -1.571631433951417911 -0.15895094763998185439;-0.6395180703170439962 1.2053250890598159462 -1.2641131008005135339 -0.53058749705480401371 0.092777028713637910151;-0.2701068818656688908 1.541822224229761007 -0.056686554191267432556 -0.31864076365858617912 -0.26778737538300184662;-0.17402682941451297349 0.1796366048932618309 -0.3081196526388238488 0.18105054408498846841 0.34524229444428938818;0.21635671929641214772 0.11886844933315586503 -0.46987810175205857455 0.39275863338368749433 -0.75671839992333045366];
LW1_1 = [0.055403062002153460885 -0.028841057367009297757 -0.34686440364320386687 -0.17147808639041814405 -0.088433073368011136384 -0.25288535653124333269 0.48617794621107152109 -0.32563914139364891209 0.32349721790887198125 0.45003006194243083682 0.46663932250511630517 0.18589476950658354037 0.39240764300695685218 -0.15692322915918444082 -0.39132316910742731553 -0.14472505565512192027 0.38414442535100962184 -0.46790437642272175722 0.2102864371237494201 0.15302498740727865645;0.41635832129372590815 -0.31466403550627930485 -0.31709815462833162991 0.50491028840722451676 -0.21100952909035944338 0.02410726288455525973 0.091350503764844187549 0.18260373898376436319 0.1937720692066773609 -0.46391930971450134891 -0.11113539761912979986 -0.0024909719256502238158 -0.51546579279598891965 0.14404720888637020937 -0.27158350975165479468 -0.032137772713279756653 -0.42813829168151135152 0.37249330760694826514 0.39109812654631126438 -0.21924957960086324804;0.027825681549142718824 -0.36841487573100412112 0.18732230503920938025 -0.15773910381130440417 -0.17331779439626510131 0.079059243296482548113 0.30112473805112000003 -0.070758276916013052027 -0.50642286434547190144 -0.25746492343508509126 -0.51453463648756680993 -0.086276404975590248458 -0.3112898745050989846 0.0069521439611877691722 0.4564219158662608522 -0.21117380548299927168 -0.40685039089553465264 -0.47876822915036265638 -0.46713589715860348583 -0.086362445216901007061;0.47731722173470969572 0.3910431660635824147 -0.022208751511710346505 0.044202822460576392249 -0.4534389976974462777 -0.25956263412977653715 0.21022049693636274403 0.17260874295827619007 -0.056837775353464285721 -0.23260253091272536929 -0.037220063377958315098 0.48995575435520377638 0.15070846891465972117 -0.24606168479065576582 0.0070426505068808967561 -0.43607744649886043264 0.15603085261650057047 -0.038578793149788494221 -0.43331214859536804074 0.31124332211942651316;0.036407128655982445853 0.23476610398064723384 -0.014307881970739962096 -0.36188058542149376118 -0.30844130139506664712 -0.39521949039741249843 0.5345679093293654871 0.3899986063280614923 -0.23118666728900016949 0.19463373386388921338 0.35410781973992488947 -0.067028578936100868813 -0.032448944863584724962 0.56548770692818073336 0.47122020305958273179 -0.2947873417022518483 -0.47521217728150100257 0.40530474858104376112 0.31335629728959518703 0.23987219173179549769;0.45599502377682504806 -0.42529402028195378849 -0.21962293899537285724 0.47964791450221977431 -0.2978503305068161966 0.36729741801792781253 0.13264634130430241754 0.30019447951069633262 -0.069710150797317710358 -0.44105974957970761618 0.47944089821333618628 0.29647297296134711431 0.2081601886366958587 0.034781550527699718611 -0.23762894286598865157 0.10925738498011274002 0.28379996284765129921 0.15837918452113242118 0.37679922346769151309 -0.20604714402778126492;0.31462771180857612707 0.18702809976141665516 0.19222088679973975411 0.41520271460124591467 -0.3429895489509794948 -0.26328247430980694643 0.054429982340226688853 0.30859182060572726281 0.57497635548818526452 -0.38626141737299735102 -0.43175274571376742738 0.053142052317986680776 -0.40839187047346448001 -0.21712189006999682572 0.38762226532860105666 -0.078895072369307636673 0.02728797071793684012 0.35009597649090429261 -0.16970016829268397274 -0.46494539791670352891;0.54474103247483929291 0.45657709902506693478 0.013594354164251721065 -0.32182631684396634242 0.22524330690874894145 0.041390728938406395887 0.068929327749181007468 0.054080550766512996974 0.51015799675680495451 0.025447579938314632275 -0.10267928469022752358 0.40121337562242764818 -0.33358555973589765209 -0.1068014064835354493 0.13535203066612194744 -0.072343375606457482885 -0.28749227714808495149 0.54100842724312780962 0.20592815587511481557 -0.16631067727907994369;0.050876994667643019032 0.28220730364009394275 0.15127676044883558992 0.020443210435325289559 -0.3839658065306280621 0.16965145901022027353 -0.36075753113385017334 -0.58991868015221149424 0.15003317471706689723 -0.3530028448832113197 0.13449443455856777141 0.48850519990157192929 -0.14857450734293925487 0.34863932645632167429 0.10374057841603991081 -0.48857213632316603968 -0.44843211271877780888 0.25060905674630440387 0.12597515638064460397 0.43929186744150000576;0.18691526680860662268 -0.23542329323223448734 -0.021576455802903887066 -0.431359842174918795 -0.16449362094483477303 0.35271104515163748117 0.16775060728064819515 0.29725969155407805378 -0.13942570659881392547 0.15892057585925309371 -0.31600829656834489301 0.27462976134882449708 -0.16088095219786316403 -0.46000502595625702984 0.11701793807773172573 -0.42340265084951617114 -0.36371140355509917752 -0.12255959824183895734 -0.29263599031994874666 0.36551960656890819523];

% Layer 2
b2 = -0.14632634646091063901;
LW2_1 = [0.92688146897453760342 0.36526013658172395981 -0.55892101805217941912 0.15538233312240690154 0.12224041463322213308 -1.7863142540847318784 -0.1204648402768195431 -0.55061237802969509314 -0.26785048360475427476 0.36762437331316727418];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0350877192982456;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Layer Delay States
ad1 = [ai1 zeros(10,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      adts = mod(ts+1,3)+1;
    
    % Input 1
    xp1 = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Layer 1
    tapdelay1 = reshape(ad1(:,mod(adts-[1 2]-1,3)+1),20,1);
    ad1(:,adts) = tansig_apply(b1 + IW1_1*xp1 + LW1_1*tapdelay1);
    
    % Layer 2
    tapdelay1 = reshape(ad1(:,mod(adts-0-1,3)+1),10,1);
    a2 = b2 + LW2_1*tapdelay1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalats = TS+(1:2);
ats = mod(finalats-1,3)+1;
af1 = ad1(:,ats);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
