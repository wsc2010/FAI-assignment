function [y1,af1] = rnnTempModel(x1,ai1)
%RNNTEMPMODEL neural network simulation function.
%
% Auto-generated by MATLAB, 13-Feb-2022 04:01:07.
% 
% [y1,af1] = rnnTempModel(x1,ai1) takes these arguments:
%   x1 = 4xTS matrix, input #1
%   ai1 = 10x2 matrix, initial 2 delay states for layer #1.
%   ai2 = 1x2 matrix, initial 2 delay states for layer #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   af1 = 10x2 matrix, final 2 delay states for layer #1.
%   af2 = 1x2 matrix, final 2 delay states for layer #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;13;-0.6];
x1_step1.gain = [0.0208333333333333;0.0202020202020202;0.0668896321070234;0.0696864111498258];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.8556806564962577966;-0.16225971398113381294;0.87224600626483461685;-0.5528815367026803651;-0.63792929381439122949;1.0048951763489371025;-0.49230677019156893204;0.32165036035556343608;1.7755106623368437369;1.3949742842834271794];
IW1_1 = [-1.2544695339799138978 -0.55603771727133033398 -0.019756954095107148034 -0.73078110863673262365;0.34523124633679941331 -0.093251862353915221382 1.3238935695137943327 -0.86804884952292393763;0.12044669489561254938 0.9583565609045906486 0.36227567318994058354 0.77453532464360952403;-1.277147000021792822 0.66317758874662147139 -2.0365435796942463753 1.7337936899791959178;-0.1241030909825626416 0.13527109857979630059 -1.4290527006718825032 -0.59005232060527890159;2.7130780437963957219 0.75741780862392005247 -0.56723931155533502402 1.3863325036336624496;-0.83386286349568150555 -1.6413024333865116056 0.37367287690959888335 -1.3994606845042760757;1.6729270742905075764 -1.3256039293841772597 1.2739340653616817445 -1.5698794041979979852;-0.18148865776187503296 -1.1671149645047900201 0.16833494113426583638 0.5649695390645701476;0.71089531065347011385 -0.9746859731601068555 -2.3551044486189778304 0.71096969343384330831];
LW1_1 = [0.089780090633972395309 -0.11051392548658037218 0.4931460953584493323 0.0059651227281765631036 0.29647756666682556492 0.15935821187489951356 -0.22842971251396773646 -0.2455051162847228241 0.48191230466658785403 0.15743259012761404159 -0.55825205054740212329 -0.13767218306716366705 0.56282839849478538685 0.48383949004607224031 0.27150120937215943551 -0.014091135334928525311 0.20453008482269396939 0.25286587172923002953 -0.51701380589239454011 0.36922088562527577427;0.19147286666775767405 -0.44137877966375599348 -0.30052520451491493425 0.14339996954937211937 0.068129319826259318593 -0.47371187054554181328 -0.18265279898916872425 0.46855159089711778675 0.44418165610393722798 0.066258060657087586298 0.1322142422378278781 -0.46942107081118217282 0.40544411564639915024 -0.43877391078671168501 0.39227240428488208135 0.0087418013677939658546 0.42447814771373271192 0.11699331307329885465 -0.18277153106241111891 -0.40930215055032093119;0.49780984986336146436 0.019913160815705394785 0.11170750105427161569 -0.48225336864727397224 -0.27552977424109237337 -0.4810127581874201752 0.23360791009615305969 -0.25148885988044761275 -0.12886965951262929764 -0.24866634967907175202 0.31734086933083643922 0.36894628986836824902 0.31779587060865094328 -0.1200923509975585779 0.46596736791460402483 0.29094857366824722344 0.31680735642307372713 -0.44565599104569303401 0.50010854780934699271 -0.10362371072799290983;0.34996442484164153042 -0.3204589871694488723 0.43551158878713464029 -0.26844476233692082801 0.36006467889549387262 -0.33726638115522833417 0.074492426304297337802 0.058836269832821204429 -0.26016608944361824252 -0.43639907753171958138 0.28932834767185777736 -0.25876450334178074941 0.43814010393979047064 -0.31405074793767906449 0.38291153989108706046 -0.40292314903839981932 -0.13114452025926640055 -0.27322672050456797699 0.33834811021591820746 0.079013429674493207422;0.14922732074391736878 -0.13369519538400076453 -0.45992928907839869535 0.25080188644793127706 0.45288810694397946266 0.32030151284162483583 0.27915370242401255085 -0.14867776747754885003 -0.32244551567507417911 -0.21381586208142702721 0.067559832058272026312 0.36216452993857956022 0.30228028645940774322 -0.45660557148528718718 0.49928737773133619049 0.40302601152980593868 -0.23096842986491084027 -0.16525824888683829372 -0.47964403099752911386 -0.30500408413200286173;0.58440351650216948443 0.23793950159186511017 -0.43707601850817706657 -0.23213170405624150572 0.01974384903361893831 -0.14896960971333525481 -0.16993273082722876177 -0.22747115913436316559 -0.23441196850372839067 0.38878292284021348513 -0.29038194682037182792 -0.53715282720216961376 -0.21429787062125732477 0.23960205195368977638 -0.12471440442963793727 0.28080863614847922927 0.29602255136699218152 -0.22866168380388873782 0.43962761634431624103 0.23817133707368653983;-0.33963846693913185559 -0.37422155029608350496 -0.27989196009643579899 0.25161052107422110513 0.20921542729319475562 -0.27362590900660999083 -0.31850555429505222893 -0.49564207297981133227 0.35391048832823623904 0.39917419756357219729 0.28745488319515100084 -0.27932843188099748533 -0.4797333319265172924 0.41775926745976016408 0.16157938436354152278 0.11697244122644116782 0.22528277949988667617 -0.080615680183727153607 -0.25762591271220169897 0.093924335129156322211;0.01103247854952658924 0.32223100170433760514 0.09357562864476348663 0.39684283791388658136 0.33682432267711648333 -0.14864256697853051037 0.083067882350692401339 0.18952590257929208262 0.028861090746154022951 0.55891181410150914122 -0.37289652560042380047 -0.51259386099922110702 0.26245605642713853989 -0.13127608627339645841 0.36405376637681241547 0.28766707853652617732 0.40212190520897977963 -0.46473170604143471119 -0.074849104352304768328 -0.040367741704134756098;0.13644575704235656355 -0.48181538397053447209 0.18332973713864358922 -0.42926517019052723434 -0.32176377695103913767 -0.34870927243845772914 -0.018113079316353353915 0.41323986239533155862 0.35190502013657143365 -0.52667704328598552443 -0.2418678508383428627 0.2689217494572592182 -0.029157318308256924971 -0.27524044940511299684 0.13110818215499372985 -0.23092972648731274754 0.44873831450335771587 0.06414527839317481217 -0.39067125000331853757 -0.27733603933209410863;0.34105788133427072939 0.35880945088127602638 0.2537417327738569206 0.11115974857174540369 -0.44696578575742329509 0.31238492776410170526 -0.089098896297074486883 -0.089450428120786365516 -0.44692492325384403085 0.26470927223522078275 -0.562853858260397244 0.22516161750754376536 -0.12211153771527238909 0.46281156910433374208 0.22794684488280630985 -0.33395250650060909203 -0.26260426070514547581 0.19056579953353791623 -0.32332189672374933576 -0.099167446993004074174];

% Layer 2
b2 = -0.23515262211228168954;
LW2_1 = [1.0152002557374752989 -1.5051711659024584744 0.69065013258740237667 -1.166725573670730487 -0.35864041598866963634 0.47251214616793368872 0.63890902785319836354 -0.62053233013642872251 0.44096090519779862493 -0.63396643652634432353];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0649350649350649;
y1_step1.xoffset = 5.6;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Layer Delay States
ad1 = [ai1 zeros(10,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      adts = mod(ts+1,3)+1;
    
    % Input 1
    xp1 = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Layer 1
    tapdelay1 = reshape(ad1(:,mod(adts-[1 2]-1,3)+1),20,1);
    ad1(:,adts) = tansig_apply(b1 + IW1_1*xp1 + LW1_1*tapdelay1);
    
    % Layer 2
    tapdelay1 = reshape(ad1(:,mod(adts-0-1,3)+1),10,1);
    a2 = b2 + LW2_1*tapdelay1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalats = TS+(1:2);
ats = mod(finalats-1,3)+1;
af1 = ad1(:,ats);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
